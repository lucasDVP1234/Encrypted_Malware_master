import os
import subprocess
from datetime import datetime
import papermill as pm

# Function to run a shell command and return its output
def run_command(command):
    process = subprocess.Popen(command, shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
    stdout, stderr = process.communicate()
    return stdout.decode(), stderr.decode(), process.returncode

# Get the current timestamp
timestamp = datetime.now().strftime("%Y%m%d%H%M%S")
pcap_file = f"output_{timestamp}.pcap"
csv_file = "AUTOMATE_CSV_TRAFFIC.csv"

# Step 1: Capture packets with tshark
print("Capturing packets...")
command = f"sudo tshark -i en0 -a duration:10 -w {pcap_file}"
stdout, stderr, returncode = run_command(command)
if returncode != 0:
    print(f"Error capturing packets: {stderr}")
    exit(1)
print(stdout)

# Step 2: Analyze packets with Zeek
print("Analyzing packets with Zeek...")
command = f"sudo zeek -r {pcap_file}"
stdout, stderr, returncode = run_command(command)
if returncode != 0:
    print(f"Error analyzing packets with Zeek: {stderr}")
    exit(1)
print(stdout)

# Step 3: Preprocess dataset in Jupyter Notebook
preprocess_notebook = "1 - DATASET 1 - TO INFER - TRAFFIC ANALYSIS WITH TPL HOST.ipynb"
preprocess_output_notebook = f"preprocess_output_{timestamp}.ipynb"
print("Preprocessing dataset...")
try:
    pm.execute_notebook(
        preprocess_notebook,
        preprocess_output_notebook,
        parameters=dict(pcap_file=pcap_file)
    )
    print(f"Preprocessed notebook saved to {preprocess_output_notebook}")
except Exception as e:
    print(f"Error preprocessing dataset: {e}")
    exit(1)



# Step 4: Perform inference on preprocessed data
inference_notebook = "3 - INFERENCE 1 - TRAFFIC.ipynb"
inference_output_notebook = f"inference_output_{timestamp}.ipynb"
print("Performing inference...")
try:
    pm.execute_notebook(
        inference_notebook,
        inference_output_notebook)
        #parameters=dict(preprocessed_csv=csv_file)
    
    print(f"Inference notebook saved to {inference_output_notebook}")
except Exception as e:
    print(f"Error performing inference: {e}")
    exit(1)


# Step 5: Preprocess traffic dataset in Jupyter Notebook to get Host Rep
preprocess_notebook = "4 - DATASET 2 - COMBO DATA FROM TRAFFIC TO HOST ANALYSIS.ipynb"
preprocess_output_notebook = f"preprocess_output2_{timestamp}.ipynb"
print("Preprocessing dataset...")
try:
    pm.execute_notebook(
        preprocess_notebook,
        preprocess_output_notebook,
    )
    print(f"Preprocessed notebook 2 saved to {preprocess_output_notebook}")
except Exception as e:
    print(f"Error preprocessing dataset: {e}")
    exit(1)



# Step 6: Perform inference on host preprocessed data
inference_notebook = "6 - INFERENCE 2 - HOST.ipynb"
inference_output_notebook = f"inference_output2_{timestamp}.ipynb"
print("Performing inference...")
try:
    pm.execute_notebook(
        inference_notebook,
        inference_output_notebook)
        #parameters=dict(preprocessed_csv=csv_file)
    
    print(f"Inference notebook 2 saved to {inference_output_notebook}")
except Exception as e:
    print(f"Error performing inference: {e}")
    exit(1)

print("Workflow complete.")
